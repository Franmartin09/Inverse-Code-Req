[
    {
        "id": "REQ-001",
        "title": "Calculate Factorial",
        "description": "The system shall calculate the factorial of a given number.",
        "acceptance_criteria": [
            {
                "id": 1,
                "description": "The system shall return 1 when the input number is 0."
            },
            {
                "id": 2,
                "description": "The system shall return the correct factorial for positive integers."
            },
            {
                "id": 3,
                "description": "The system shall handle recursive calls correctly to calculate the factorial."
            }
        ],
        "priority": "High",
        "dependencies": null
    },
    {
        "id": "REQ-001",
        "title": "Vowel Counter Functionality",
        "description": "The system shall provide a function to count the number of vowels in a given string.",
        "acceptance_criteria": [
            {
                "id": 1,
                "description": "The function shall return the correct count of vowels for a string containing only lowercase letters."
            },
            {
                "id": 2,
                "description": "The function shall return the correct count of vowels for a string containing only uppercase letters."
            },
            {
                "id": 3,
                "description": "The function shall return the correct count of vowels for a string containing a mix of lowercase and uppercase letters."
            },
            {
                "id": 4,
                "description": "The function shall return 0 for a string containing no vowels."
            },
            {
                "id": 5,
                "description": "The function shall handle strings containing non-alphabet characters and return the correct count of vowels."
            }
        ],
        "priority": "Medium",
        "dependencies": null
    },
    {
        "id": "REQ-001",
        "title": "Prime Number Validation",
        "description": "The system shall validate whether a given number is a prime number.",
        "acceptance_criteria": [
            {
                "id": 1,
                "description": "The system shall return False for numbers less than or equal to 1."
            },
            {
                "id": 2,
                "description": "The system shall return False for numbers that have at least one divisor other than 1 and itself."
            },
            {
                "id": 3,
                "description": "The system shall return True for numbers that have no divisors other than 1 and itself."
            }
        ],
        "priority": "High",
        "dependencies": null
    },
    {
        "id": "REQ-001",
        "title": "Calculate Circle Area",
        "description": "The system shall calculate the area of a circle given its radius.",
        "acceptance_criteria": [
            {
                "id": 1,
                "description": "The system shall return the correct area of a circle with a radius of 1 unit."
            },
            {
                "id": 2,
                "description": "The system shall return the correct area of a circle with a radius of 10 units."
            },
            {
                "id": 3,
                "description": "The system shall return an error when the radius is a negative number."
            }
        ],
        "priority": "High",
        "dependencies": null
    },
    {
        "id": "RS-001",
        "title": "Reverse String Functionality",
        "description": "The system shall provide a function to reverse a given string.",
        "acceptance_criteria": [
            {
                "id": 1,
                "description": "The function shall return the input string in reverse order."
            },
            {
                "id": 2,
                "description": "The function shall handle strings of any length."
            },
            {
                "id": 3,
                "description": "The function shall return an empty string when given an empty string as input."
            }
        ],
        "priority": "Media",
        "dependencies": null
    },
    {
        "id": "REQ-001",
        "title": "Exclusive Parkpilot Signal Detection",
        "description": "The system shall detect when the parkpilot switch is pressed exclusively, without any other signals being active.",
        "acceptance_criteria": [
            {
                "id": 1,
                "description": "The system shall set the state to 'Pressed' when the parkpilot switch is pressed exclusively."
            },
            {
                "id": 2,
                "description": "The system shall set the state to 'Released' when the parkpilot switch is not pressed exclusively."
            },
            {
                "id": 3,
                "description": "The system shall ignore other signals when the parkpilot switch is pressed exclusively."
            }
        ],
        "priority": "High",
        "dependencies": null
    },
    {
        "id": "REQ-001",
        "title": "Initial State and Exclusive Press Detection",
        "description": "The system shall initialize with a default state and detect exclusive press events.",
        "acceptance_criteria": [
            {
                "id": 1,
                "description": "The system initializes with a default state of 'Released'."
            },
            {
                "id": 2,
                "description": "The system initializes with exclusive press detection set to False."
            },
            {
                "id": 3,
                "description": "The system correctly updates the state and exclusive press detection variables when events occur."
            }
        ],
        "priority": "Medium",
        "dependencies": null
    }
]